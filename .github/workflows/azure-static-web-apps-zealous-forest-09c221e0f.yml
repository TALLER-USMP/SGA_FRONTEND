name: Azure Static Web Apps CI/CD + DAST

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client

      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
            const coredemo = require('@actions/core')
            return await coredemo.getIDToken()
          result-encoding: string

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ZEALOUS_FOREST_09C221E0F }}
          action: "upload"
          ###### Repository/Build Configurations ######
          app_location: "apps/dashboard" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "dist" # Built app content directory - optional
          github_id_token: ${{ steps.idtoken.outputs.result }}
          ###### End of Repository/Build Configurations ######

  dast_scan_job:
    name: DAST Security Scan (OWASP ZAP CLI)
    runs-on: ubuntu-latest
    needs: build_and_deploy_job
    steps:
      - name: Install Java and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jre-headless wget unzip

      - name: Download and Extract OWASP ZAP
        run: |
          wget https://github.com/zaproxy/zaproxy/releases/download/v2.14.0/ZAP_2_14_0_Linux.zip -O zap.zip
          unzip zap.zip -d $HOME/zap
          echo "ZAP installed in $HOME/zap"

      - name: Run ZAP Baseline Scan on Root App (Dashboard)
        run: |
          echo "Running OWASP ZAP baseline scan on Dashboard..."
          java -jar $HOME/zap/ZAP_2_14_0/zap.jar -cmd -quickurl https://zealous-forest-09c221e0f.2.azurestaticapps.net/ -quickout zap_dashboard.html -quickprogress

      # (Opcional) Escanear otros microfrontends si los tienes desplegados:
      # - name: Run ZAP Scan on Auth Microfrontend
      #   run: |
      #     echo "Running OWASP ZAP scan on Auth module..."
      #     java -jar $HOME/zap/ZAP_2_14_0/zap.jar -cmd -quickurl https://zealous-forest-09c221e0f.2.azurestaticapps.net/auth -quickout zap_auth.html -quickprogress
      #
      # - name: Run ZAP Scan on Inventario Microfrontend
      #   run: |
      #     echo "Running OWASP ZAP scan on Inventario module..."
      #     java -jar $HOME/zap/ZAP_2_14_0/zap.jar -cmd -quickurl https://zealous-forest-09c221e0f.2.azurestaticapps.net/inventario -quickout zap_inventario.html -quickprogress

      - name: Upload ZAP HTML Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-reports
          path: |
            zap_dashboard.html
            zap_auth.html
            zap_inventario.html

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"
